version: '3'

services:
  
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=number8
      - POSTGRES_PASSWORD=number8*
      - POSTGRES_DB=number_8
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
        
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
      restart: always
      image: docker.io/bitnami/kafka:3.3
      ports:
        - "9093:9093"
      volumes:
        - "kafka-volume:/bitnami"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      depends_on:
        - zookeeper

    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    ports:
        - "9200:9200" 
    environment:
     - xpack.security.enabled=false
     - discovery.type=single-node
    
  kibana:
   image: docker.elastic.co/kibana/kibana:8.13.0
   ports:
     - "5601:5601"
   depends_on: 
     - elasticsearch
   environment:
     - ELASTICSEARCH_URL=http://localhost:9200
      
  webapi:
    image: n5user
    ports:
        - "8080:8080"
    build:
      context: .
      dockerfile: Dockerfile
    environment:
        - ASPNETCORE_URLS=http://*:8080
        - ConnectionStrings__DefaultConnection=Host=localhost;Database=number_8;Username=number8;Password=number8*;

volumes:
  elasticsearch_data:
  kafka-volume:
  zookeeper-volume:
  n5user:

